{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TruvideoSdkInterface"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"The "},{"code":"TruvideoSdkInterface","type":"codeVoice"},{"type":"text","text":" protocol provides essential methods for managing API keys,"},{"text":" ","type":"text"},{"text":"verifying authentication status, checking for session expiration, and handling","type":"text"},{"type":"text","text":" "},{"text":"reauthentication workflows. Implementing this protocol ensures that your application","type":"text"},{"text":" ","type":"text"},{"text":"interacts with TruVideo services in a secure, consistent, and reliable manner.","type":"text"}],"type":"paragraph"},{"anchor":"Authentication-Overview","level":2,"type":"heading","text":"Authentication Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This protocol facilitates a robust authentication system by offering methods to:"}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Retrieve the API Key Securely","type":"text"}],"type":"strong"},{"text":": Access the API key required for authenticated requests.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Verify Authentication Status"}]},{"type":"text","text":": Determine if a user currently has an active session."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Check Session Expiration"}],"type":"strong"},{"type":"text","text":": Identify if an authentication session has expired and needs renewal."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Manage Reauthentication"}]},{"type":"text","text":": Reinitialize authentication seamlessly when necessary."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"By centralizing these authentication tasks, developers can maintain a secure and seamless","type":"text"},{"text":" ","type":"text"},{"text":"user experience, ensuring that sensitive operations are performed only when appropriate.","type":"text"}]},{"anchor":"Use-Cases","type":"heading","text":"Use Cases","level":2},{"inlineContent":[{"text":"Typical scenarios where this protocol is essential include:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Secure API Requests"}],"type":"strong"},{"type":"text","text":": Ensuring that only authenticated users can make API calls."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Session Management"}]},{"text":": Automatically checking and refreshing expired sessions.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"User Logout"}]},{"text":": Clearing authentication data when a user logs out.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Multi-Device Support"}]},{"text":": Handling authentication across multiple devices or platforms.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Generating-Signature-for-Authentication","level":2,"type":"heading","text":"Generating Signature for Authentication"},{"inlineContent":[{"text":"To authenticate requests, the TruVideo SDK requires a payload signed with a secure key.","type":"text"},{"type":"text","text":" "},{"text":"The signature ensures data integrity and verifies the authenticity of the request.","type":"text"},{"type":"text","text":" "},{"text":"Below is an example of how to generate an HMAC-SHA256 signature for your payload:","type":"text"}],"type":"paragraph"},{"code":["import Foundation","import CommonCrypto","","extension String {","    \/\/\/ Generates an HMAC-SHA256 signature using the provided secret key.","    \/\/\/","    \/\/\/ - Parameter key: The secret key used to generate the signature.","    \/\/\/ - Returns: A hexadecimal string representing the HMAC-SHA256 signature.","    func toHMACSHA256(using key: String) -> String {","        let data = Data(self.utf8)","        let keyData = Data(key.utf8)","        var macData = Data(count: Int(CC_SHA256_DIGEST_LENGTH))","","        macData.withUnsafeMutableBytes { macBytes in","            data.withUnsafeBytes { dataBytes in","                keyData.withUnsafeBytes { keyBytes in","                    CCHmac(","                        CCHmacAlgorithm(kCCHmacAlgSHA256),","                        keyBytes.baseAddress,","                        keyData.count,","                        dataBytes.baseAddress,","                        data.count,","                        macBytes.baseAddress","                    )","                }","            }","        }","","        return macData.map { String(format: \"%02hhx\", $0) }.joined()","    }","}"],"type":"codeListing","syntax":"swift"},{"level":2,"text":"Security Best Practices","type":"heading","anchor":"Security-Best-Practices"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Important:","type":"text"}],"type":"emphasis"},{"text":" To maximize security, ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"never store the secret key within your application"}]},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Instead, implement a secure backend service that generates the signed payload on your behalf."},{"type":"text","text":" "},{"type":"text","text":"This approach prevents exposure of the secret key and significantly reduces the risk of unauthorized access."}]},{"text":"Examples","anchor":"Examples","level":3,"type":"heading"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Retrieve API Key","type":"text"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Retrieve the current API key required for making authenticated requests with the SDK."}]},{"code":["let apiKey = try TruvideoSdk.apiKey()"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Authenticate a Request"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Perform authentication by providing the API key, payload, signature, and optionally, an external ID. This establishes a secure session within the SDK."}]},{"type":"codeListing","syntax":"swift","code":["try await TruvideoSdk.authenticate(","    apiKey: \"yourApiKey\",","    payload: \"yourPayload\",","    signature: \"yourSignature\",","    externalId: \"optionalExternalId\"",")"]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Authentication Status","type":"text"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Check the client’s authentication status to verify session validity:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"isAuthenticated()","type":"codeVoice"},{"type":"text","text":": Returns "},{"type":"codeVoice","code":"true"},{"text":" if the client is authenticated; otherwise, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":". Note that a session may be authenticated but still expired."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"isAuthenticationExpired()","type":"codeVoice"},{"type":"text","text":": Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the session has expired; otherwise, "},{"type":"codeVoice","code":"false"},{"type":"text","text":". If the client is not authenticated, it always returns "},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]}]}],"type":"unorderedList"},{"type":"codeListing","syntax":"swift","code":["let isAuthenticated = try TruvideoSdk.isAuthenticated()","let isAuthenticationExpired = try TruvideoSdk.isAuthenticationExpired()"]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Clear Authentication"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Delete the current session and erase all associated authentication data, effectively logging the user out of the SDK."}]},{"type":"codeListing","syntax":"swift","code":["try TruvideoSdk.clearAuthentication()"]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Generate Payload"}],"type":"strong"}],"type":"paragraph"},{"inlineContent":[{"text":"Create a new authentication payload containing device-specific information for secure requests.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let payload = try TruvideoSdk.generatePayload()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Reinitialize Authentication"}]}]},{"inlineContent":[{"type":"text","text":"Reset the SDK’s authentication state, typically used when tokens have expired, to prepare for reauthentication."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["try await TruvideoSdk.initAuthentication()"]}]}],"abstract":[{"type":"text","text":"A foundational interface for the TruVideo SDK, enabling secure and efficient"},{"type":"text","text":" "},{"type":"text","text":"authentication flows for applications integrating with the TruVideo platform."}],"variants":[{"paths":["\/documentation\/truvideosdk\/truvideosdkinterface"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/apiKey()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/authenticate(apiKey:payload:signature:externalId:)-1mugk","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/clearAuthentication()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/generatePayload()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/initAuthentication()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticated()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticationExpired()"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"hierarchy":{"paths":[["doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk"]]},"sections":[],"identifier":{"url":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"TruvideoSdkInterface","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TruvideoSdkInterface","kind":"identifier"}],"modules":[{"name":"TruvideoSdk"}],"roleHeading":"Protocol","externalID":"s:11TruvideoSdk0aB9InterfaceP","role":"symbol","navigatorTitle":[{"text":"TruvideoSdkInterface","kind":"identifier"}]},"references":{"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/isAuthenticationExpired()":{"required":true,"type":"topic","role":"symbol","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/isauthenticationexpired()","abstract":[{"text":"Determines whether the current authentication session has expired.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isAuthenticationExpired","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticationExpired()","title":"isAuthenticationExpired()","kind":"symbol"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk":{"url":"\/documentation\/truvideosdk","kind":"symbol","title":"TruvideoSdk","role":"collection","abstract":[],"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk","type":"topic"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/clearAuthentication()":{"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/clearAuthentication()","kind":"symbol","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/clearauthentication()","required":true,"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearAuthentication"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"clearAuthentication()","abstract":[{"type":"text","text":"Clears all stored authentication credentials."}]},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/isAuthenticated()":{"kind":"symbol","required":true,"role":"symbol","type":"topic","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticated()","abstract":[{"type":"text","text":"Verifies whether the SDK currently has an active, authenticated session."}],"title":"isAuthenticated()","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/isauthenticated()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isAuthenticated","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface":{"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface","abstract":[{"text":"A foundational interface for the TruVideo SDK, enabling secure and efficient","type":"text"},{"text":" ","type":"text"},{"text":"authentication flows for applications integrating with the TruVideo platform.","type":"text"}],"url":"\/documentation\/truvideosdk\/truvideosdkinterface","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TruvideoSdkInterface","kind":"identifier"}],"title":"TruvideoSdkInterface","navigatorTitle":[{"text":"TruvideoSdkInterface","kind":"identifier"}]},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/apiKey()":{"title":"apiKey()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"apiKey","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"url":"\/documentation\/truvideosdk\/truvideosdkinterface\/apikey()","kind":"symbol","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/apiKey()","role":"symbol","type":"topic","required":true,"abstract":[{"type":"text","text":"Retrieves the API key used for SDK authentication."}]},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/authenticate(apiKey:payload:signature:externalId:)-1mugk":{"required":true,"role":"symbol","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/authenticate(apikey:payload:signature:externalid:)-1mugk","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"authenticate","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"apiKey"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"payload","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"signature"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"externalId","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"kind":"symbol","abstract":[{"type":"text","text":"Authenticates a request using the specified API key, payload, signature, and an optional external ID."}],"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/authenticate(apiKey:payload:signature:externalId:)-1mugk","type":"topic","title":"authenticate(apiKey:payload:signature:externalId:)","defaultImplementations":1},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/generatePayload()":{"abstract":[{"text":"Generates a new authentication payload containing device-specific information.","type":"text"}],"title":"generatePayload()","type":"topic","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/generatePayload()","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/generatepayload()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"generatePayload"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"required":true,"role":"symbol"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/initAuthentication()":{"abstract":[{"type":"text","text":"Reinitializes the authentication process, often used when tokens have expired."}],"kind":"symbol","title":"initAuthentication()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initAuthentication","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"required":true,"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/initAuthentication()","role":"symbol","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/initauthentication()","type":"topic"}}}