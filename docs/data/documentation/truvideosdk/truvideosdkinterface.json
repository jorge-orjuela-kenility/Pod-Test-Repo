{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TruvideoSdkInterface","kind":"identifier"}]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TruvideoSdkInterface"},{"type":"text","text":" protocol provides essential methods for managing API keys,"},{"type":"text","text":" "},{"text":"verifying authentication status, checking for session expiration, and handling","type":"text"},{"type":"text","text":" "},{"text":"reauthentication workflows. Implementing this protocol ensures that your application","type":"text"},{"type":"text","text":" "},{"type":"text","text":"interacts with TruVideo services in a secure, consistent, and reliable manner."}]},{"text":"Authentication Overview","level":2,"type":"heading","anchor":"Authentication-Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This protocol facilitates a robust authentication system by offering methods to:"}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Retrieve the API Key Securely","type":"text"}],"type":"strong"},{"text":": Access the API key required for authenticated requests.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Verify Authentication Status","type":"text"}],"type":"strong"},{"type":"text","text":": Determine if a user currently has an active session."}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Check Session Expiration","type":"text"}],"type":"strong"},{"type":"text","text":": Identify if an authentication session has expired and needs renewal."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Manage Reauthentication","type":"text"}],"type":"strong"},{"text":": Reinitialize authentication seamlessly when necessary.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By centralizing these authentication tasks, developers can maintain a secure and seamless"},{"type":"text","text":" "},{"text":"user experience, ensuring that sensitive operations are performed only when appropriate.","type":"text"}]},{"text":"Use Cases","level":2,"type":"heading","anchor":"Use-Cases"},{"inlineContent":[{"text":"Typical scenarios where this protocol is essential include:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Secure API Requests"}],"type":"strong"},{"type":"text","text":": Ensuring that only authenticated users can make API calls."}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Session Management"}],"type":"strong"},{"type":"text","text":": Automatically checking and refreshing expired sessions."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"User Logout","type":"text"}],"type":"strong"},{"text":": Clearing authentication data when a user logs out.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Multi-Device Support","type":"text"}]},{"type":"text","text":": Handling authentication across multiple devices or platforms."}]}]}]},{"anchor":"Generating-Signature-for-Authentication","type":"heading","level":2,"text":"Generating Signature for Authentication"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To authenticate requests, the TruVideo SDK requires a payload signed with a secure key."},{"text":" ","type":"text"},{"text":"The signature ensures data integrity and verifies the authenticity of the request.","type":"text"},{"type":"text","text":" "},{"text":"Below is an example of how to generate an HMAC-SHA256 signature for your payload:","type":"text"}]},{"code":["import Foundation","import CommonCrypto","","extension String {","    \/\/\/ Generates an HMAC-SHA256 signature using the provided secret key.","    \/\/\/","    \/\/\/ - Parameter key: The secret key used to generate the signature.","    \/\/\/ - Returns: A hexadecimal string representing the HMAC-SHA256 signature.","    func toHMACSHA256(using key: String) -> String {","        let data = Data(self.utf8)","        let keyData = Data(key.utf8)","        var macData = Data(count: Int(CC_SHA256_DIGEST_LENGTH))","","        macData.withUnsafeMutableBytes { macBytes in","            data.withUnsafeBytes { dataBytes in","                keyData.withUnsafeBytes { keyBytes in","                    CCHmac(","                        CCHmacAlgorithm(kCCHmacAlgSHA256),","                        keyBytes.baseAddress,","                        keyData.count,","                        dataBytes.baseAddress,","                        data.count,","                        macBytes.baseAddress","                    )","                }","            }","        }","","        return macData.map { String(format: \"%02hhx\", $0) }.joined()","    }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Security-Best-Practices","type":"heading","text":"Security Best Practices","level":2},{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"text":"Important:","type":"text"}]},{"type":"text","text":" To maximize security, "},{"type":"strong","inlineContent":[{"type":"text","text":"never store the secret key within your application"}]},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Instead, implement a secure backend service that generates the signed payload on your behalf.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This approach prevents exposure of the secret key and significantly reduces the risk of unauthorized access."}]},{"level":3,"text":"Examples","anchor":"Examples","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Retrieve API Key"}]}]},{"inlineContent":[{"type":"text","text":"Retrieve the current API key required for making authenticated requests with the SDK."}],"type":"paragraph"},{"syntax":"swift","code":["let apiKey = try TruvideoSdk.apiKey()"],"type":"codeListing"},{"inlineContent":[{"inlineContent":[{"text":"Authenticate a Request","type":"text"}],"type":"strong"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Perform authentication by providing the API key, payload, signature, and optionally, an external ID. This establishes a secure session within the SDK."}]},{"syntax":"swift","code":["try await TruvideoSdk.authenticate(","    apiKey: \"yourApiKey\",","    payload: \"yourPayload\",","    signature: \"yourSignature\",","    externalId: \"optionalExternalId\"",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Authentication Status"}],"type":"strong"}]},{"inlineContent":[{"text":"Check the client’s authentication status to verify session validity:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"isAuthenticated()","type":"codeVoice"},{"text":": Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the client is authenticated; otherwise, "},{"type":"codeVoice","code":"false"},{"type":"text","text":". Note that a session may be authenticated but still expired."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isAuthenticationExpired()"},{"type":"text","text":": Returns "},{"code":"true","type":"codeVoice"},{"text":" if the session has expired; otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":". If the client is not authenticated, it always returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}]}]},{"type":"codeListing","syntax":"swift","code":["let isAuthenticated = try TruvideoSdk.isAuthenticated()","let isAuthenticationExpired = try TruvideoSdk.isAuthenticationExpired()"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Clear Authentication"}],"type":"strong"}]},{"inlineContent":[{"type":"text","text":"Delete the current session and erase all associated authentication data, effectively logging the user out of the SDK."}],"type":"paragraph"},{"code":["try TruvideoSdk.clearAuthentication()"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Generate Payload"}],"type":"strong"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new authentication payload containing device-specific information for secure requests."}]},{"type":"codeListing","syntax":"swift","code":["let payload = try TruvideoSdk.generatePayload()"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Reinitialize Authentication"}]}]},{"inlineContent":[{"type":"text","text":"Reset the SDK’s authentication state, typically used when tokens have expired, to prepare for reauthentication."}],"type":"paragraph"},{"code":["try await TruvideoSdk.initAuthentication()"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"metadata":{"externalID":"s:11TruvideoSdk0aB9InterfaceP","symbolKind":"protocol","modules":[{"name":"TruvideoSdk"}],"title":"TruvideoSdkInterface","roleHeading":"Protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TruvideoSdkInterface"}],"navigatorTitle":[{"text":"TruvideoSdkInterface","kind":"identifier"}]},"abstract":[{"type":"text","text":"A foundational interface for the TruVideo SDK, enabling secure and efficient"},{"type":"text","text":" "},{"type":"text","text":"authentication flows for applications integrating with the TruVideo platform."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/truvideosdk\/truvideosdkinterface"]}],"identifier":{"url":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"topicSections":[{"anchor":"Instance-Methods","identifiers":["doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/apiKey()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/authenticate(apiKey:payload:signature:externalId:)-1mugk","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/clearAuthentication()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/generatePayload()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/initAuthentication()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticated()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticationExpired()"],"title":"Instance Methods","generated":true}],"references":{"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/generatePayload()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"generatePayload"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"type":"topic","abstract":[{"type":"text","text":"Generates a new authentication payload containing device-specific information."}],"url":"\/documentation\/truvideosdk\/truvideosdkinterface\/generatepayload()","title":"generatePayload()","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/generatePayload()","required":true,"kind":"symbol"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk":{"url":"\/documentation\/truvideosdk","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk","abstract":[],"title":"TruvideoSdk"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/isAuthenticationExpired()":{"kind":"symbol","required":true,"role":"symbol","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/isauthenticationexpired()","title":"isAuthenticationExpired()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isAuthenticationExpired","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Determines whether the current authentication session has expired.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticationExpired()"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/apiKey()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"apiKey"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/apiKey()","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/apikey()","abstract":[{"type":"text","text":"Retrieves the API key used for SDK authentication."}],"type":"topic","required":true,"title":"apiKey()","role":"symbol"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/clearAuthentication()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"clearAuthentication","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"clearAuthentication()","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/clearauthentication()","abstract":[{"text":"Clears all stored authentication credentials.","type":"text"}],"required":true,"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/clearAuthentication()"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TruvideoSdkInterface"}],"url":"\/documentation\/truvideosdk\/truvideosdkinterface","abstract":[{"type":"text","text":"A foundational interface for the TruVideo SDK, enabling secure and efficient"},{"text":" ","type":"text"},{"type":"text","text":"authentication flows for applications integrating with the TruVideo platform."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"TruvideoSdkInterface"}],"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface","title":"TruvideoSdkInterface"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/initAuthentication()":{"url":"\/documentation\/truvideosdk\/truvideosdkinterface\/initauthentication()","abstract":[{"type":"text","text":"Reinitializes the authentication process, often used when tokens have expired."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"initAuthentication"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/initAuthentication()","kind":"symbol","title":"initAuthentication()","required":true,"type":"topic"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/isAuthenticated()":{"abstract":[{"type":"text","text":"Verifies whether the SDK currently has an active, authenticated session."}],"url":"\/documentation\/truvideosdk\/truvideosdkinterface\/isauthenticated()","required":true,"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isAuthenticated"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isAuthenticated()","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticated()"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/authenticate(apiKey:payload:signature:externalId:)-1mugk":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"authenticate"},{"text":"(","kind":"text"},{"text":"apiKey","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"payload"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"signature","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"externalId","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/authenticate(apiKey:payload:signature:externalId:)-1mugk","abstract":[{"type":"text","text":"Authenticates a request using the specified API key, payload, signature, and an optional external ID."}],"title":"authenticate(apiKey:payload:signature:externalId:)","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/authenticate(apikey:payload:signature:externalid:)-1mugk","type":"topic","required":true,"defaultImplementations":1,"role":"symbol","kind":"symbol"}}}