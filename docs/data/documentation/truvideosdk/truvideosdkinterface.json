{"kind":"symbol","abstract":[{"text":"A foundational interface for the TruVideo SDK, enabling secure and efficient","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"authentication flows for applications integrating with the TruVideo platform."}],"variants":[{"paths":["\/documentation\/truvideosdk\/truvideosdkinterface"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:11TruvideoSdk0aB9InterfaceP","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"TruvideoSdkInterface"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TruvideoSdkInterface"}],"title":"TruvideoSdkInterface","role":"symbol","modules":[{"name":"TruvideoSdk"}],"roleHeading":"Protocol"},"identifier":{"url":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"anchor":"Instance-Methods","identifiers":["doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/apiKey()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/authenticate(apiKey:payload:signature:externalId:)-1mugk","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/clearAuthentication()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/generatePayload()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/initAuthentication()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticated()","doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticationExpired()"],"generated":true,"title":"Instance Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TruvideoSdkInterface","kind":"identifier"}],"platforms":["iOS"],"languages":["swift"]}]},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"TruvideoSdkInterface"},{"text":" protocol provides essential methods for managing API keys,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"verifying authentication status, checking for session expiration, and handling"},{"text":" ","type":"text"},{"type":"text","text":"reauthentication workflows. Implementing this protocol ensures that your application"},{"type":"text","text":" "},{"text":"interacts with TruVideo services in a secure, consistent, and reliable manner.","type":"text"}]},{"text":"Authentication Overview","level":2,"type":"heading","anchor":"Authentication-Overview"},{"inlineContent":[{"text":"This protocol facilitates a robust authentication system by offering methods to:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Retrieve the API Key Securely"}],"type":"strong"},{"text":": Access the API key required for authenticated requests.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Verify Authentication Status","type":"text"}],"type":"strong"},{"type":"text","text":": Determine if a user currently has an active session."}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Check Session Expiration","type":"text"}],"type":"strong"},{"text":": Identify if an authentication session has expired and needs renewal.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Manage Reauthentication"}]},{"type":"text","text":": Reinitialize authentication seamlessly when necessary."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By centralizing these authentication tasks, developers can maintain a secure and seamless"},{"text":" ","type":"text"},{"type":"text","text":"user experience, ensuring that sensitive operations are performed only when appropriate."}]},{"level":2,"anchor":"Use-Cases","type":"heading","text":"Use Cases"},{"inlineContent":[{"type":"text","text":"Typical scenarios where this protocol is essential include:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Secure API Requests"}],"type":"strong"},{"text":": Ensuring that only authenticated users can make API calls.","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Session Management","type":"text"}],"type":"strong"},{"text":": Automatically checking and refreshing expired sessions.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"User Logout"}],"type":"strong"},{"text":": Clearing authentication data when a user logs out.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Multi-Device Support"}]},{"text":": Handling authentication across multiple devices or platforms.","type":"text"}]}]}],"type":"unorderedList"},{"text":"Generating Signature for Authentication","type":"heading","level":2,"anchor":"Generating-Signature-for-Authentication"},{"type":"paragraph","inlineContent":[{"text":"To authenticate requests, the TruVideo SDK requires a payload signed with a secure key.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The signature ensures data integrity and verifies the authenticity of the request."},{"type":"text","text":" "},{"type":"text","text":"Below is an example of how to generate an HMAC-SHA256 signature for your payload:"}]},{"type":"codeListing","syntax":"swift","code":["import Foundation","import CommonCrypto","","extension String {","    \/\/\/ Generates an HMAC-SHA256 signature using the provided secret key.","    \/\/\/","    \/\/\/ - Parameter key: The secret key used to generate the signature.","    \/\/\/ - Returns: A hexadecimal string representing the HMAC-SHA256 signature.","    func toHMACSHA256(using key: String) -> String {","        let data = Data(self.utf8)","        let keyData = Data(key.utf8)","        var macData = Data(count: Int(CC_SHA256_DIGEST_LENGTH))","","        macData.withUnsafeMutableBytes { macBytes in","            data.withUnsafeBytes { dataBytes in","                keyData.withUnsafeBytes { keyBytes in","                    CCHmac(","                        CCHmacAlgorithm(kCCHmacAlgSHA256),","                        keyBytes.baseAddress,","                        keyData.count,","                        dataBytes.baseAddress,","                        data.count,","                        macBytes.baseAddress","                    )","                }","            }","        }","","        return macData.map { String(format: \"%02hhx\", $0) }.joined()","    }","}"]},{"level":2,"text":"Security Best Practices","type":"heading","anchor":"Security-Best-Practices"},{"inlineContent":[{"type":"emphasis","inlineContent":[{"text":"Important:","type":"text"}]},{"text":" To maximize security, ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"never store the secret key within your application"}]},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Instead, implement a secure backend service that generates the signed payload on your behalf.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This approach prevents exposure of the secret key and significantly reduces the risk of unauthorized access."}],"type":"paragraph"},{"type":"heading","text":"Examples","level":3,"anchor":"Examples"},{"inlineContent":[{"inlineContent":[{"text":"Retrieve API Key","type":"text"}],"type":"strong"}],"type":"paragraph"},{"inlineContent":[{"text":"Retrieve the current API key required for making authenticated requests with the SDK.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let apiKey = try TruvideoSdk.apiKey()"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Authenticate a Request"}]}]},{"inlineContent":[{"type":"text","text":"Perform authentication by providing the API key, payload, signature, and optionally, an external ID. This establishes a secure session within the SDK."}],"type":"paragraph"},{"syntax":"swift","code":["try await TruvideoSdk.authenticate(","    apiKey: \"yourApiKey\",","    payload: \"yourPayload\",","    signature: \"yourSignature\",","    externalId: \"optionalExternalId\"",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Authentication Status","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"text":"Check the clientâ€™s authentication status to verify session validity:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"isAuthenticated()"},{"type":"text","text":": Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the client is authenticated; otherwise, "},{"code":"false","type":"codeVoice"},{"type":"text","text":". Note that a session may be authenticated but still expired."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"isAuthenticationExpired()","type":"codeVoice"},{"type":"text","text":": Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the session has expired; otherwise, "},{"code":"false","type":"codeVoice"},{"text":". If the client is not authenticated, it always returns ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"syntax":"swift","type":"codeListing","code":["let isAuthenticated = try TruvideoSdk.isAuthenticated()","let isAuthenticationExpired = try TruvideoSdk.isAuthenticationExpired()"]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Clear Authentication"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Delete the current session and erase all associated authentication data, effectively logging the user out of the SDK.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["try TruvideoSdk.clearAuthentication()"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Generate Payload"}]}]},{"inlineContent":[{"type":"text","text":"Create a new authentication payload containing device-specific information for secure requests."}],"type":"paragraph"},{"type":"codeListing","code":["let payload = try TruvideoSdk.generatePayload()"],"syntax":"swift"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Reinitialize Authentication"}],"type":"strong"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Reset the SDKâ€™s authentication state, typically used when tokens have expired, to prepare for reauthentication."}],"type":"paragraph"},{"syntax":"swift","code":["try await TruvideoSdk.initAuthentication()"],"type":"codeListing"}],"kind":"content"}],"references":{"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/generatePayload()":{"title":"generatePayload()","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/generatePayload()","abstract":[{"text":"Generates a new authentication payload containing device-specific information.","type":"text"}],"url":"\/documentation\/truvideosdk\/truvideosdkinterface\/generatepayload()","required":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"generatePayload","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/apiKey()":{"required":true,"role":"symbol","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/apiKey()","abstract":[{"type":"text","text":"Retrieves the API key used for SDK authentication."}],"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"apiKey","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"url":"\/documentation\/truvideosdk\/truvideosdkinterface\/apikey()","title":"apiKey()"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface":{"abstract":[{"text":"A foundational interface for the TruVideo SDK, enabling secure and efficient","type":"text"},{"type":"text","text":" "},{"text":"authentication flows for applications integrating with the TruVideo platform.","type":"text"}],"title":"TruvideoSdkInterface","url":"\/documentation\/truvideosdk\/truvideosdkinterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TruvideoSdkInterface"}],"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"TruvideoSdkInterface","kind":"identifier"}]},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/authenticate(apiKey:payload:signature:externalId:)-1mugk":{"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/authenticate(apiKey:payload:signature:externalId:)-1mugk","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"authenticate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"apiKey","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"payload","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"signature","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"externalId","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"defaultImplementations":1,"title":"authenticate(apiKey:payload:signature:externalId:)","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/authenticate(apikey:payload:signature:externalid:)-1mugk","kind":"symbol","type":"topic","required":true,"abstract":[{"text":"Authenticates a request using the specified API key, payload, signature, and an optional external ID.","type":"text"}],"role":"symbol"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk":{"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk","title":"TruvideoSdk","abstract":[],"kind":"symbol","url":"\/documentation\/truvideosdk","role":"collection","type":"topic"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/clearAuthentication()":{"title":"clearAuthentication()","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/clearAuthentication()","abstract":[{"text":"Clears all stored authentication credentials.","type":"text"}],"url":"\/documentation\/truvideosdk\/truvideosdkinterface\/clearauthentication()","required":true,"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"clearAuthentication"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}]},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/isAuthenticationExpired()":{"type":"topic","abstract":[{"type":"text","text":"Determines whether the current authentication session has expired."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isAuthenticationExpired","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","required":true,"role":"symbol","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticationExpired()","title":"isAuthenticationExpired()","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/isauthenticationexpired()"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/isAuthenticated()":{"title":"isAuthenticated()","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/isAuthenticated()","required":true,"role":"symbol","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/isauthenticated()","type":"topic","abstract":[{"type":"text","text":"Verifies whether the SDK currently has an active, authenticated session."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isAuthenticated"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol"},"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk/TruvideoSdkInterface/initAuthentication()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initAuthentication","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","abstract":[{"type":"text","text":"Reinitializes the authentication process, often used when tokens have expired."}],"identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/TruvideoSdkInterface\/initAuthentication()","title":"initAuthentication()","type":"topic","url":"\/documentation\/truvideosdk\/truvideosdkinterface\/initauthentication()","required":true,"kind":"symbol"}}}