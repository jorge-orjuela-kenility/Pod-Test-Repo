{"hierarchy":{"paths":[["doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk"]]},"identifier":{"url":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk\/GettingStarted","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/truvideosdk\/gettingstarted"]},{"paths":["\/documentation\/truvideosdk\/gettingstarted"],"traits":[{"interfaceLanguage":"occ"}]}],"sections":[],"metadata":{"title":"Getting started with TruvideoSdk","roleHeading":"Sample Code","role":"sampleCode","images":[{"identifier":"architecture.jpg","type":"icon"}],"modules":[{"name":"TruvideoSdk"}]},"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"inlineContent":[{"text":"The ","type":"text"},{"inlineContent":[{"text":"TruVideo SDK","type":"text"}],"type":"strong"},{"text":" provides developers with a robust framework for managing secure user authentication, video workflows, and data management. It ensures reliable integration for video-centric applications on iOS.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This SDK includes methods for:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Authenticating users with API keys and payloads.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Managing session statuses, including checking for expiration and reinitialization."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Follow the steps below to integrate and authenticate with the SDK efficiently."}]},{"code":["    \/\/\/ Generates an HMAC-SHA256 signature using the provided secret key.","    \/\/\/","    \/\/\/ - Parameter key: The secret key used to generate the signature.","    \/\/\/ - Returns: A hexadecimal string representing the HMAC-SHA256 signature.","    func toHMACSHA256(using key: String) -> String {","        let data = Data(self.utf8)","        let keyData = Data(key.utf8)","        var macData = Data(count: Int(CC_SHA256_DIGEST_LENGTH))","        ","        macData.withUnsafeMutableBytes { macBytes in","            data.withUnsafeBytes { dataBytes in","                keyData.withUnsafeBytes { keyBytes in","                    CCHmac(","                        CCHmacAlgorithm(kCCHmacAlgSHA256),","                        keyBytes.baseAddress,","                        keyData.count,","                        dataBytes.baseAddress,","                        data.count,","                        macBytes.baseAddress","                    )","                }","            }","        }","        ","        return macData.map { String(format: \"%02hhx\", $0) }.joined()","    }"],"type":"codeListing","syntax":"swift"},{"level":2,"type":"heading","text":"How to authenticate","anchor":"How-to-authenticate"},{"inlineContent":[{"type":"text","text":"The authenticate method requires the following inputs:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"API Key","type":"text"}]},{"type":"text","text":": The API key associated with your account, required to authorize requests."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Payload"}]},{"text":": A payload generated by the generatePayload method containing device-specific information.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Signature"}]},{"text":": An HMAC-SHA256 signature of the payload, created using a secret key.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"External ID (Optional)","type":"text"}]},{"text":": An optional identifier for additional context in authentication.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"The following example demonstrates how to use the authenticate method:","type":"text"}]},{"type":"codeListing","code":["    func authenticate() async throws {","        let payload = try TruvideoSdk.generatePayload()","        let signature = payload.toHMACSHA256(using: \"secretKey\")","        ","        try await TruvideoSdk.authenticate(","            apiKey: \"apiKey\",","            payload: \"payload\",","            signature: signature,","            externalId: \"externalId\"","        )","    }"],"syntax":"swift"},{"level":2,"type":"heading","anchor":"How-to-clear-authentication","text":"How to clear authentication"},{"code":["    func clearAuthentication() async throws {","        try TruvideoSdk.clearAuthentication()","    }"],"type":"codeListing","syntax":"swift"}]}],"references":{"doc://com.truvideo.TruvideoSdk/documentation/TruvideoSdk":{"title":"TruvideoSdk","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/truvideosdk","identifier":"doc:\/\/com.truvideo.TruvideoSdk\/documentation\/TruvideoSdk","role":"collection"},"architecture.jpg":{"alt":null,"identifier":"architecture.jpg","variants":[{"traits":["1x","light"],"url":"\/images\/architecture.jpg"}],"type":"image"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"path":"\/seeAlsoSections","value":null,"op":"add"}]}]}